@model LoginViewModel

<div class="container my-5">
    <div class="row">
        <!-- Local Account Login -->
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Local Account Login</h4>
                </div>
                <div class="card-body">
                    <form method="post" asp-action="Login" asp-controller="Account" novalidate>
                        <input type="hidden" name="ReturnUrl" value="@Model.ReturnUrl" />

                        <!-- Validation Summary -->
                        <div asp-validation-summary="All" class="text-danger mb-3"></div>

                        <!-- Email Field -->
                        <div class="mb-3">
                            <label asp-for="Email" class="form-label"></label>
                            <input asp-for="Email" class="form-control" placeholder="Enter your email" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <!-- Password Field -->
                        <div class="mb-3">
                            <label asp-for="Password" class="form-label"></label>
                            <input asp-for="Password" class="form-control" placeholder="Enter your password" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>

                        <!-- Remember Me -->
                        <div class="form-check mb-3">
                            <input asp-for="RememberMe" class="form-check-input" />
                            <label asp-for="RememberMe" class="form-check-label">
                                @Html.DisplayNameFor(m => m.RememberMe)
                            </label>
                        </div>

                        <!-- Login Button & Confirm Email Button -->
                        <div class="d-flex justify-content-between align-items-center">
                            <button type="submit" class="btn btn-success">Log In</button>
                            <a class="btn btn-warning"
                               asp-controller="Account"
                               asp-action="ResendConfirmationEmail"
                               asp-route-IsResend="false">Confirm Email</a>
                        </div>
                    </form>

                    <!-- Register & Forgot Password Options -->
                    <div class="mt-3 d-flex justify-content-end">
                        <a asp-controller="Account" asp-action="Register" class="btn btn-link">
                            Register
                        </a>
                        <a asp-controller="Account" asp-action="ForgotPassword" class="btn btn-link">
                            Forgot Password?
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- External Login -->
        <div class="col-md-6 mt-4 mt-md-0">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">External Login</h4>
                </div>
                <div class="card-body">
                    @if (Model.ExternalLogins == null || Model.ExternalLogins.Count == 0)
                    {
                        <div class="alert alert-info mb-0">
                            No external logins configured
                        </div>
                    }
                    else
                    {
                        <p class="mb-3">You can log in using one of the following providers:</p>
                        <div class="d-grid gap-2">
                            @foreach (var provider in Model.ExternalLogins)
                            {
                                <button type="button"
                                        class="btn btn-outline-primary external-login-btn"
                                        data-provider="@provider.Name"
                                        data-url="@Url.Action("ExternalLogin", "Account", new { provider = provider.Name, returnUrl = Model.ReturnUrl })"
                                        title="Log in using your @provider.DisplayName account">
                                    @provider.DisplayName
                                </button>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        document.querySelectorAll('.external-login-btn').forEach(button => {
            button.addEventListener('click', function () {
                var provider = this.getAttribute('data-provider');
                var url = this.getAttribute('data-url');

                // Define popup window size
                var width = 500;
                var height = 600;
                var left = (window.innerWidth / 2) - (width / 2);
                var top = (window.innerHeight / 2) - (height / 2);

                // Open the popup window
                var popup = window.open(url, provider, `width=${width},height=${height},top=${top},left=${left},resizable=yes`);

                // Monitor the popup to check if it closes
                var checkPopup = setInterval(function () {
                    if (popup.closed) {
                        clearInterval(checkPopup);
                        // Optionally, reload or fetch updated user state
                        location.reload(); // Refresh the parent window to reflect login state
                    }
                }, 500); // Check every 500ms if the popup is closed
            });
        });
    </script>
}